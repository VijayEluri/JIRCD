<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010 Guillermo Castro
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jircd</groupId>
    <artifactId>jircd-parent</artifactId>
    <packaging>pom</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>JIRCD Parent package</name>
    <url>http://jircd.org</url>
    <inceptionYear>2010</inceptionYear>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>javageek</id>
            <name>Guillermo Castro</name>
            <email>jircd@javageek.org</email>
            <organization>JavaGeek.org</organization>
            <organizationUrl>http://javageek.org</organizationUrl>
            <roles>
                <role>Creator</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:javageek/JIRCD.git</connection>
        <url>scm:git:git@github.com:javageek/JIRCD.git</url>
        <developerConnection>scm:git:git@github.com:javageek/JIRCD.git</developerConnection>
    </scm>

    <modules>
        <module>jircd-core</module>
        <module>jircd-client</module>
    </modules>

    <properties>
        <!-- Maven targets -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compile.source>1.8</maven.compile.source>
        <maven.compile.target>1.8</maven.compile.target>

        <!-- Library versions -->
        <mina.version>2.0.13</mina.version>
        <slf4j.version>1.7.21</slf4j.version>
        <log4j.version>2.6.2</log4j.version>
        <junit.version>4.12</junit.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.mina</groupId>
                <artifactId>mina-core</artifactId>
                <version>${mina.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- -->
            <dependency>
                <groupId>org.jircd</groupId>
                <artifactId>jircd-core</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${maven.compile.source}</source>
                        <target>${maven.compile.target}</target>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>
</project>